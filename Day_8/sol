class Solution{
public:
vector<int> twoOutOfThree(vector<int>& nums1, vector<int>& nums2, vector<int>& nums3) {
    // Create sets for the three arrays to remove duplicates
    set<int> set1(nums1.begin(), nums1.end());
    set<int> set2(nums2.begin(), nums2.end());
    set<int> set3(nums3.begin(), nums3.end());

    // Set to store the result (elements present in at least two arrays)
    set<int> resultSet;

    // Check elements in set1, if they exist in set2 or set3, add to resultSet
    for (int num : set1) {
        if (set2.count(num) > 0 || set3.count(num) > 0) {
            resultSet.insert(num);
        }
    }

    // Check elements in set2, if they exist in set3, add to resultSet
    for (int num : set2) {
        if (set3.count(num) > 0) {
            resultSet.insert(num);
        }
    }

    // Convert the result set to a vector to return
    return vector<int>(resultSet.begin(), resultSet.end());
}
};
